import streamlit as st

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Comparador de Descontos", layout="centered")
st.title("üí∏ Comparador de Descontos")

# --- Entradas do Usu√°rio ---
st.header("Entradas do Usu√°rio")

apuro = st.number_input("üí∞ Apuro total (‚Ç¨)", min_value=0.0, value=800.0, step=10.0, help="O valor total bruto que voc√™ recebeu.")
desc_combustivel = st.number_input("‚õΩ Desconto de Combust√≠vel (‚Ç¨)", min_value=0.0, value=200.0, step=1.0, help="O valor que voc√™ gasta com combust√≠vel e que √© deduzido do apuro.")

st.markdown("---")

# --- L√≥gica para mostrar as op√ß√µes ---
st.header("Op√ß√µes da Empresa")

# Define os valores padr√£o para as op√ß√µes
aluguer_padrao = 280.0
perc_aluguer_padrao = 7.0
seguro_padrao = 45.0
perc_seguro_padrao = 12.0
manutencao_padrao = 20.0  # Novo valor padr√£o para manuten√ß√£o

# Inicializa o estado de exibi√ß√£o se ainda n√£o existir
if 'show_inputs' not in st.session_state:
    st.session_state.show_inputs = False

# Bot√£o para alternar a visibilidade dos campos de entrada
if st.button("Modificar Op√ß√µes Padr√£o"):
    st.session_state.show_inputs = not st.session_state.show_inputs

if st.session_state.show_inputs:
    # Colunas para organizar as op√ß√µes lado a lado, apenas quando os inputs est√£o vis√≠veis
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("Op√ß√£o 1")
        # Chaves s√£o usadas para armazenar os valores no session_state
        aluguer = st.number_input("üè† Aluguer (‚Ç¨)", min_value=0.0, value=aluguer_padrao, step=1.0, key='aluguer_input')
        perc_aluguer = st.number_input("üëî Percentual sobre o Apuro (%)", min_value=0.0, value=perc_aluguer_padrao, step=0.5, key='perc_aluguer_input')

    with col2:
        st.subheader("Op√ß√£o 2")
        seguro = st.number_input("üõ°Ô∏è Seguro (‚Ç¨)", min_value=0.0, value=seguro_padrao, step=1.0, key='seguro_input')
        perc_seguro = st.number_input("üëî Percentual sobre o Apuro (%)", min_value=0.0, value=perc_seguro_padrao, step=0.5, key='perc_seguro_input')
        manutencao = st.number_input("üõ†Ô∏è Despesas de Manuten√ß√£o (‚Ç¨)", min_value=0.0, value=manutencao_padrao, step=1.0, key='manutencao_input')
else:
    # Usa os valores padr√£o se os inputs n√£o estiverem vis√≠veis
    aluguer = aluguer_padrao
    perc_aluguer = perc_aluguer_padrao
    seguro = seguro_padrao
    perc_seguro = perc_seguro_padrao
    manutencao = manutencao_padrao
    st.info("Valores padr√£o das op√ß√µes est√£o sendo usados. Clique no bot√£o acima para modific√°-los.")

st.markdown("---")

# Bot√£o para iniciar o c√°lculo
if st.button("Calcular üîπ", type="primary"):
    # Subtrair combust√≠vel do apuro para obter o valor l√≠quido
    apuro_liquido = apuro - desc_combustivel

    # Pega os valores atuais (padr√£o ou modificados)
    aluguer_atual = st.session_state.get('aluguer_input', aluguer_padrao)
    perc_aluguer_atual = st.session_state.get('perc_aluguer_input', perc_aluguer_padrao)
    seguro_atual = st.session_state.get('seguro_input', seguro_padrao)
    perc_seguro_atual = st.session_state.get('perc_seguro_input', perc_seguro_padrao)
    manutencao_atual = st.session_state.get('manutencao_input', manutencao_padrao) # Novo valor atual

    # C√°lculo do que sobra em cada op√ß√£o
    sobra_opcao1 = apuro_liquido - (apuro * perc_aluguer_atual / 100) - aluguer_atual
    sobra_opcao2 = apuro_liquido - (apuro * perc_seguro_atual / 100) - seguro_atual - manutencao_atual # Adicionado a dedu√ß√£o de manuten√ß√£o
    
    st.subheader("üìä Resultados:")
    st.markdown(f"**Apuro L√≠quido:** {apuro_liquido:,.2f} ‚Ç¨ (apuro total - combust√≠vel)")
    st.markdown("---")

    # Exibir resultados detalhados
    st.markdown("### Vis√£o Geral")
    st.write(f"Na **Op√ß√£o 1**, o valor final que sobra √©: **{sobra_opcao1:,.2f} ‚Ç¨**")
    st.write(f"Na **Op√ß√£o 2**, o valor final que sobra √©: **{sobra_opcao2:,.2f} ‚Ç¨**")
    
    # Determinar e exibir a melhor op√ß√£o
    if sobra_opcao1 > sobra_opcao2:
        st.success(f"üéâ A **Op√ß√£o 1** √© a melhor escolha, com uma diferen√ßa de **{(sobra_opcao1 - sobra_opcao2):,.2f} ‚Ç¨**.")
    elif sobra_opcao2 > sobra_opcao1:
        st.success(f"üéâ A **Op√ß√£o 2** √© a melhor escolha, com uma diferen√ßa de **{(sobra_opcao2 - sobra_opcao1):,.2f} ‚Ç¨**.")
    else:
        st.info("As duas op√ß√µes resultam no mesmo valor.")
        
    st.markdown("---")
    
    # Detalhe dos c√°lculos
    st.markdown("### Detalhes dos C√°lculos")
    st.markdown(f"""
    **C√°lculo da Op√ß√£o 1:**
    * Apuro L√≠quido: {apuro_liquido:,.2f} ‚Ç¨
    * Dedu√ß√£o da Empresa: {apuro:,.2f} ‚Ç¨ * ({perc_aluguer_atual} / 100) = **{(apuro * perc_aluguer_atual / 100):,.2f} ‚Ç¨**
    * Dedu√ß√£o de Aluguer: **{aluguer_atual:,.2f} ‚Ç¨**
    * **Valor Final:** {apuro_liquido:,.2f} - {(apuro * perc_aluguer_atual / 100):,.2f} - {aluguer_atual:,.2f} = **{sobra_opcao1:,.2f} ‚Ç¨**
    """)
    
    st.markdown(f"""
    **C√°lculo da Op√ß√£o 2:**
    * Apuro L√≠quido: {apuro_liquido:,.2f} ‚Ç¨
    * Dedu√ß√£o da Empresa: {apuro:,.2f} ‚Ç¨ * ({perc_seguro_atual} / 100) = **{(apuro * perc_seguro_atual / 100):,.2f} ‚Ç¨**
    * Dedu√ß√£o de Seguro: **{seguro_atual:,.2f} ‚Ç¨**
    * Dedu√ß√£o de Manuten√ß√£o: **{manutencao_atual:,.2f} ‚Ç¨**
    * **Valor Final:** {apuro_liquido:,.2f} - {(apuro * perc_seguro_atual / 100):,.2f} - {seguro_atual:,.2f} - {manutencao_atual:,.2f} = **{sobra_opcao2:,.2f} ‚Ç¨**
    """)
